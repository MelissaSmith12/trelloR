% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trello_get.R
\name{trello_get}
\alias{trello_get}
\title{Get Data From Trello API}
\usage{
trello_get(url, token = NULL, filter = NULL, limit = NULL, query = NULL,
  paging = FALSE, bind.rows = TRUE)
}
\arguments{
\item{url}{url for the GET request, see \code{\link[httr]{GET}} for details}

\item{token}{previously generated token, see \code{\link{trello_get_token}} for how to obtain it}

\item{filter}{url parameter}

\item{limit}{url parameter (defaults to 1000; if reached, paging is suggested)}

\item{query}{url parameters that form the query, see \code{\link[httr]{GET}} for details}

\item{paging}{logical whether paging should be used}

\item{bind.rows}{by default, pages will be combined into one \code{data.frame} by \code{\link[dplyr]{bind_rows}}. Set to \code{FALSE} if you want \code{list} instead. This is useful on the rare occasion that the JSON response is not formatted correctly and makes \code{\link[dplyr]{bind_rows}} fail}
}
\description{
Issues \code{\link[httr]{GET}} requests for Trello API endpoints. \code{\link{get_board}} and \code{\link{get_card}} are convenience wrappers for this function.
}
\details{
If the request fails, server error messages are extracted from the response header and reprinted on the console.

Only JSON responses are accepted. \code{\link[jsonlite]{fromJSON}} converts them into flat \code{data.frame}s. Non-JSON type of response throws an error.

When \code{paging = TRUE}, then every batch of results is searched and the ID of the earliest result is retrieved. This is then supplied to the next request as the value of the \code{before} parameter, so that Trello knows where to start fetching the next batch of results. \code{\link{trello_get}} will keep paging until there is nothing more to fetch (i.e., the number of results per page is smaller then 1000 which is the server response limit).

\code{filter} and \code{limit} are query parameters and can be set individually; you could achieve the same result by using \code{query = list(filter = "filter_value", limit = "limit_value")}
}
\examples{
# No authorization is required to access public boards. Let's get the ID of
# Trello Development Roadmap board (notice the .json suffix):
url = "https://trello.com/b/nC8QJJoZ/trello-development-roadmap.json"
bid = get_id_board(url)

# Once we have the ID, we can use it to make specific queries:
lists  = get_board_lists(bid)            # Get all lists
labels = get_board_labels(bid)           # Get all labels
cards  = get_board_cards(bid, limit = 5) # Get 5 cards

# Now we can extract card ID. As with boards, this allows us to to query
# cards for particular resources:
card1_id   = cards$id[1]
card1_comm = get_card_comments(card1_id) # Get all comments

# To retrieve large results, paging might be necessary:

\dontrun{

tdr_actions = get_board_actions(bid, paging = TRUE)
}

# For private boards, you need a secure token:

\dontrun{

token = get_token("your_key", "your_secret")
all_open_cards = get_board_cards(board_id, token, filter = "open")
}
}
\seealso{
\code{\link[httr]{GET}}, \code{\link[jsonlite]{fromJSON}}, \code{\link{trello_get_token}}
}

